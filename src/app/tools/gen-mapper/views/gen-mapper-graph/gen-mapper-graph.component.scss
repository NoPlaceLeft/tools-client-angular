@import "~styles/colors";

:host::ng-deep {
    display: flex;
    flex-direction: column;
    position: relative;
    flex: 1;

    svg {
        user-select: none;
    }

    rect {
        fill: white;
    }

    h2 {
        font-size: 18px;
    }

    h3 {
        font-size: 16px;
        margin: 0;
        padding: 0;
        border: 0;
    }

    p {
        margin-top: 0.3em;
    }

    /**** SVG ****/
    #genmapper-graph {
        width: 100%;
        height: 100%;
        overflow: hidden;
    }

    #genmapper-graph-svg {
        // background: whitesmoke;
        // height: 100%;
    }

    .node--active text,
    .link-text--active {
        stroke: black;
        fill: black;
    }

    .node--inactive text,
    .link-text--inactive {
        stroke: #000;
        fill: #000;
        opacity: 0.4;
    }

    .node--inactive image {
        // opacity: 0.4 !important;
    }

    .node--inactive > rect,
    .node--inactive > line {
        stroke: #ddd !important;
    }

    g.node-action {
        display: none;
    }

    g.add-child-node-action,
    g.removeNode,
    g.edit-node-action,
    g.copyNode,
    g.pasteNode {
        display: none;
        opacity: 0.6;

        line,
        rect ~ rect {
            pointer-events: none;
        }

        &:hover {
            opacity: 1;
        }
    }

    .add-child-node-action,
    .edit-node-action,
    .removeNode {
        text {
            fill: white;
            stroke: unset;
        }
    }

    .add-child-node-action {
        rect {
            fill: mat-color($success, lighter);
            stroke: mat-color($success);
            stroke-width: 2px;
        }

        text {
            fill: mat-color($success);
        }
    }

    .edit-node-action {
        rect {
            fill: mat-color($secondary, lighter);
            stroke: mat-color($secondary);
            stroke-width: 2px;
        }

        text {
            fill: mat-color($secondary);
        }
    }

    .removeNode {
        rect {
            fill: mat-color($warn);
        }
    }

    .copyNode {
        rect {
            fill: $gray;
        }
    }

    .node {
        cursor: pointer;
    }

    .node text {
        font: 15px sans-serif;
        text-anchor: middle;

        &.node-name,
        &.node-place,
        &.node-date,
        &.node-leaderName,
        &.node-leadersName,
        &.node-mentor {
            font-size: 12px;
        }

        &.node-believers,
        &.node-baptized,
        &.node-attenders,
        &.node-newlyBaptized {
            font-size: 11px;
        }
    }

    .node .node-labels text {
        font-size: 12px;
    }

    .node-hover-rect {
        opacity: 0;
    }

    .device-desktop & {
        .node:hover {
            .node-church-box {
                fill: mat-color($accent, lighter);
            }
        }

        .node:hover {
            g.add-child-node-action,
            g.edit-node-action,
            g.copyNode,
            g.removeNode,
            g.pasteNode {
                display: block;
            }

            .node-action {
                display: block;
            }

            .node-hover-rect {
                // opacity: 1;
            }
        }
    }

    .node.is-focused {
        .node-church-box {
            fill: mat-color($accent, lighter);
        }

        g.add-child-node-action,
        g.edit-node-action,
        g.copyNode,
        g.removeNode,
        g.pasteNode {
            display: block;
        }

        // .node-action {
        //     display: block;
        // }

        // .node-hover-rect {
        //     opacity: 1;
        // }
    }

    .link {
        fill: none;
        stroke: #ccc;
        stroke-width: 2px;
    }

    .link-text {
        text-anchor: middle;

        &.new-generation {
            stroke: red;
            fill: red;
        }
    }

    .invisible-rect {
        fill-opacity: 0;
        stroke-opacity: 0;
    }

    rect.hidden-rect {
        fill: transparent !important;
        stroke: transparent !important;
    }

    svg text {
        stroke: transparent !important;
    }

    svg.dragging-node {
        .node:not(.dragging) {
            opacity: 0.5;
            pointer-events: none;
        }
    }
}
